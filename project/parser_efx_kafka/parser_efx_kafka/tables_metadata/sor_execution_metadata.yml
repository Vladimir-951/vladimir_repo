SORExecution:
  sql: "merge into {env}_gmta.efx.sor_execution as tgt using (
          values ({source_values})
        ) as src ({source_attributes})
        on tgt.id = src.id and tgt.time_stamp = src.time_stamp
        when not matched then
          insert ({source_attributes})
          values ({source_values});"

  sql_delete: "delete from {env}_gmta.efx.sor_execution where time_stamp >= '{batch_tz_transact_time}';"

  main_path:
    header: ['descriptor']
    table_name: ['descriptor', 'name']

  path:
    id: {'path': ['data', 'id']}
    time_stamp: {'path': ['data', 'timeStamp']}
    time_stamp_human_readable: {'function': ['date_utc_convert', ['data', 'timeStamp']]}
    child_order_id: {'path': ['data', 'childOrderId']}
    trade_id: {'path': ['data', 'tradeId']}
    exec_id: {'path': ['data', 'execId']}
    transaction_time: {'path': ['data', 'transactionTime']}
    transaction_time_human_readable: {'function': ['date_convert', ['data', 'transactionTime']]}
    sending_time: {'path': ['data', 'sendingTime']}
    sending_time_human_readable:  {'function': ['date_convert', ['data', 'sendingTime']]}
    amount: {'path': ['data', 'amount']}
    side: {'path': ['data', 'side']}
    rate: {'path': ['data', 'rate']}
    counter_party: {'path': ['data', 'counterParty']}
    insert_date_time: 'insert_date_time'
    modified_date_time: 'modified_date_time'