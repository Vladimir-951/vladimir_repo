SORChildOrder:
  sql: "merge into {env}_gmta.efx.sor_child_order as tgt using (
          values ({source_values})
        ) as src ({source_attributes})
        on tgt.id = src.id and tgt.time_stamp = src.time_stamp
        when not matched then
          insert ({source_attributes})
          values ({source_values});"

  sql_delete: "delete from {env}_gmta.efx.sor_child_order where time_stamp >= '{batch_tz_transact_time}';"

  main_path:
    header: ['descriptor']
    table_name: ['descriptor', 'name']

  path:
    id: {'path': ['data', 'id']}
    time_stamp: {'path': ['data', 'timeStamp']}
    time_stamp_human_readable: {'function': ['date_utc_convert', ['data', 'timeStamp']]}
    order_id: {'path': ['data', 'orderId']}
    order_time_stamp: {'path': ['data', 'orderTimeStamp']}
    order_time_stamp_human_readable: {'function': ['date_utc_convert', ['data', 'orderTimeStamp']]}
    parent_order_id: {'path': ['data', 'parentOrderId']}
    extra_params_str: {'path': ['data', 'extraParamsStr']}
    forward_points_adjustment: {'path': ['data', 'forwardPointsAdjustment']}
    settlement: {'path': ['data', 'settlement']}
    cl_ord_id: {'path': ['data', 'clOrdId']}
    provider_id: {'path': ['data', 'providerId']}
    state: {'path': ['data', 'state']}
    time_in_force: {'path': ['data', 'timeInForce']}
    provider_name: {'path': ['data', 'providerName']}
    side: {'path': ['data', 'side']}
    quantity: {'path': ['data', 'quantity']}
    limit_price: {'path': ['data', 'limitPrice']}
    settlement_date: {'path': ['data', 'settlementDate']}
    term_quantity_executed: {'path': ['data', 'termQuantityExecuted']}
    lp_ord_id: {'path': ['data', 'lpOrdId']}
    quantity_executed: {'path': ['data', 'quantityExecuted']}
    price_executed: {'path': ['data', 'priceExecuted']}
    strategy: {'path': ['data', 'strategy']}
    status: {'function': ['replace_comma', ['data', 'status']]}
    insert_date_time: 'insert_date_time'
    modified_date_time: 'modified_date_time'